<vb:ModuleViewBase x:Class="Plugin.RotateNewPoint.Views.RotateNewPointView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:vb="clr-namespace:VM.Start.Core;assembly=VM.Start"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                   xmlns:local="clr-namespace:Plugin.RotateNewPoint.Views"
                   xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:helper="clr-namespace:VM.Start.Common.Helper;assembly=VM.Start"
                   xmlns:enum="clr-namespace:VM.Start.Common.Enums;assembly=VM.Start"
                   xmlns:vm="clr-namespace:Plugin.RotateNewPoint.ViewModels"
                   xmlns:cvt="clr-namespace:VM.Start.Assets.Converter;assembly=VM.Start"
                   xmlns:WinFormHost="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
             Height="650" Width="450" Icon="/Plugin.RotateNewPoint;component/Assets/Images/Tool/RotateNewPoint.png" >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="360"/>
            <RowDefinition />
            <RowDefinition Height="55"/>
        </Grid.RowDefinitions>
        <Border >
            <GroupBox Header="计算数据（一个点围绕旋转中心旋转角度后的新点）">
                <StackPanel HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="旋转中心X:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Text="{Binding RotateCenterX.Text,UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Value="{Binding RotateCenterX.Value}"
                         Style="{StaticResource LinkTextBox}"
                         mah:TextBoxHelper.LinkButtonCommand="{Binding LinkCommand,Mode=OneWay}"
                         mah:TextBoxHelper.LinkButtonCommandParameter="{x:Static vm:eLinkCommand.RotateCenterX}"
                         mah:TextBoxHelper.Watermark="double,int"
                         VerticalAlignment="Center" HorizontalAlignment="Center" Width="200"  Margin="5 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="旋转中心Y:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Text="{Binding RotateCenterY.Text,UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Value="{Binding RotateCenterY.Value}"
                         Style="{StaticResource LinkTextBox}"
                         mah:TextBoxHelper.LinkButtonCommand="{Binding LinkCommand,Mode=OneWay}"
                         mah:TextBoxHelper.LinkButtonCommandParameter="{x:Static vm:eLinkCommand.RotateCenterY}"
                         mah:TextBoxHelper.Watermark="double,int"
                         VerticalAlignment="Center" HorizontalAlignment="Center" Width="200"  Margin="5 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="旋转点X:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Text="{Binding RotatePointX.Text,UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Value="{Binding RotatePointX.Value}"
                         Style="{StaticResource LinkTextBox}"
                         mah:TextBoxHelper.LinkButtonCommand="{Binding LinkCommand,Mode=OneWay}"
                         mah:TextBoxHelper.LinkButtonCommandParameter="{x:Static vm:eLinkCommand.RotatePointX}"
                         mah:TextBoxHelper.Watermark="double,int"
                         VerticalAlignment="Center" HorizontalAlignment="Center" Width="200"  Margin="5 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="旋转点Y:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Text="{Binding RotatePointY.Text,UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Value="{Binding RotatePointY.Value}"
                         Style="{StaticResource LinkTextBox}"
                         mah:TextBoxHelper.LinkButtonCommand="{Binding LinkCommand,Mode=OneWay}"
                         mah:TextBoxHelper.LinkButtonCommandParameter="{x:Static vm:eLinkCommand.RotatePointY}"
                         mah:TextBoxHelper.Watermark="double,int"
                         VerticalAlignment="Center" HorizontalAlignment="Center" Width="200"  Margin="5 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="旋转角度R:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Text="{Binding RotateAngle.Text,UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Value="{Binding RotateAngle.Value}"
                         Style="{StaticResource LinkTextBox}"
                         mah:TextBoxHelper.LinkButtonCommand="{Binding LinkCommand,Mode=OneWay}"
                         mah:TextBoxHelper.LinkButtonCommandParameter="{x:Static vm:eLinkCommand.RotateAngle}"
                         mah:TextBoxHelper.Watermark="double,int"
                         VerticalAlignment="Center" HorizontalAlignment="Center" Width="200"  Margin="5 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="65,25">
                        <CheckBox Content="角度取反进行计算" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10 10 0 0" IsChecked="{Binding InvertAngle}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </Border>
        <Border Grid.Row="1">
            <GroupBox Header="返回结果" >
                <StackPanel HorizontalAlignment="Center" Margin="10,30">
                    <StackPanel Orientation="Horizontal" Margin="5,10">
                        <TextBlock Text="旋转新点X:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Width="200" Margin="5 0" BorderThickness="0 00 0 1"
                                                 IsReadOnly="True" Text="{Binding RotateNewPointX}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5,20">
                        <TextBlock Text="旋转新点Y:" VerticalAlignment="Center" Width="60"/>
                        <TextBox Width="200" Margin="5 0" BorderThickness="0 0 0 1"
                                                 IsReadOnly="True" Text="{Binding RotateNewPointY}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </Border>
        <Border Grid.Row="2" BorderBrush="White" BorderThickness="0 0.5 0 0">
            <DockPanel LastChildFill="True">
                <StackPanel Margin="10 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock>
                        <Run Text="耗时:"/>
                        <Run Text="{Binding ModuleParam.ElapsedTime}"/>
                        <Run Text="ms"/>
                    </TextBlock>
                    <TextBlock>
                        <Run Text="状态:"/>
                        <Run Text="{Binding ModuleParam.Status,Converter={StaticResource StatusConverter}}"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="btnExecute" Content="执行" HorizontalAlignment="Right" Margin="10 0" Command="{Binding ExecuteCommand}"/>
                    <Button x:Name="btnCancel" Content="取消" HorizontalAlignment="Right" Margin="10 0" Click="btnCancel_Click"/>
                    <Button x:Name="btnConfirm" Content="确认" HorizontalAlignment="Right" Margin="10 0" Command="{Binding ConfirmCommand}"
                            Background="#FFFF2000" BorderBrush="#FFFF2000"/>
                </StackPanel>
            </DockPanel>
        </Border>
    </Grid>
</vb:ModuleViewBase>
