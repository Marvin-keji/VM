<vb:ModuleViewBase x:Class="Plugin.DataCheck.Views.DataCheckView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:vb="clr-namespace:VM.Start.Core;assembly=VM.Start"      
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                   xmlns:local="clr-namespace:Plugin.DataCheck.Views"
                   xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:helper="clr-namespace:VM.Start.Common.Helper;assembly=VM.Start"
                   xmlns:enum="clr-namespace:VM.Start.Common.Enums;assembly=VM.Start"
                   xmlns:cvt="clr-namespace:VM.Start.Assets.Converter;assembly=VM.Start"
                   xmlns:vm="clr-namespace:Plugin.DataCheck.ViewModels"
                   xmlns:WinFormHost="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
                   xmlns:hw="clr-namespace:VM.Halcon;assembly=VM.Halcon" 
                   Icon="/Plugin.DataCheck;component/Assets/Images/Tool/DataCheck.png"
                   Height="680" Width="980"
                   Loaded="ModuleViewBase_Loaded">
    <Window.DataContext>
        <vm:DataCheckViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <cvt:EnumConverter x:Key="EnumConverter"/>
                    <cvt:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
                    <cvt:StatusConverter x:Key="StatusConverter"/>
                </ResourceDictionary>
                <ResourceDictionary   Source="pack://application:,,,/VM.Start;component/Assets/Collection.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="55"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>
            <DataGrid AutoGenerateColumns="False" x:Name="dg1"
                                      EnableColumnVirtualization="True"
                                      EnableRowVirtualization="True"
                                      VirtualizingPanel.IsVirtualizing="True"
                                      ItemsSource="{Binding DataChecks}" 
                                      SelectedItem="{Binding SelectedData}"
                                      FontSize="12" 
                                      RowHeaderWidth="20"
                                      SelectionUnit="FullRow"
                                      HeadersVisibility="Column"
                                      GridLinesVisibility="Horizontal"
                                      CanUserAddRows="False" 
                                      CanUserSortColumns="False"
                                      >
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="LeftDoubleClick">
                        <helper:EventTriggerAction Command="{Binding DataChangedCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn  Header="索引" IsReadOnly="True" Binding="{Binding ID}" Width="0.5*"/>
                    <DataGridCheckBoxColumn Header="是否检查" IsReadOnly="False" Binding="{Binding IsCheck}" Width="1*"/>
                    <DataGridTextColumn Header="数据链接" IsReadOnly="True" Binding="{Binding DataLinkText}" Width="2*"/>
                    <DataGridTextColumn Header="值" IsReadOnly="True" Binding="{Binding DataLinkValue}" Width="1*"/>
                    <DataGridTextColumn Header="状态" IsReadOnly="true" Binding="{Binding State}" Width="1*"/>
                    <DataGridTextColumn Header="下限" IsReadOnly="False" Binding="{Binding lowerLimit}" Width="1*"/>
                    <DataGridTextColumn Header="上限" IsReadOnly="False" Binding="{Binding upperLimit}" Width="1*"/>
                    <DataGridTextColumn Header="下公差" IsReadOnly="False" Binding="{Binding lowerDeviation}" Width="1*"/>
                    <DataGridTextColumn Header="上公差" IsReadOnly="False" Binding="{Binding upperDeviation}" Width="1*"/>
                </DataGrid.Columns>
            </DataGrid>
            <Border Grid.Column="1">
                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                    <Button Content="添加" Command="{Binding LinkCommandButton}"/>
                    <Button Content="删除" Margin="0,30" Command="{Binding DataOperateCommand}"  CommandParameter="Delete"/>
                    <Button Content="上移" Command="{Binding DataOperateCommand}" CommandParameter="UpMove"/>
                    <Button Content="下移" Margin="0,30" Command="{Binding DataOperateCommand}" CommandParameter="DownMove"/>
                    <TextBlock Text="综合判定：" Margin="0,30,0,10" TextAlignment="Center" FontSize="22"></TextBlock>
                    <TextBlock Text="{Binding Result}" TextAlignment="Center" FontSize="22"></TextBlock>
                </StackPanel>
            </Border>
        </Grid>
        <Border Grid.Row="1" BorderBrush="White" BorderThickness="0 0.5 0 0">
            <DockPanel LastChildFill="True">
                <StackPanel Margin="10 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock>
                        <Run Text="耗时:"/>
                        <Run Text="{Binding ModuleParam.ElapsedTime}"/>
                        <Run Text="ms"/>
                    </TextBlock>
                    <TextBlock>
                        <Run Text="状态:"/>
                        <Run Text="{Binding ModuleParam.Status,Converter={StaticResource StatusConverter}}"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="btnExecute" Content="执行" HorizontalAlignment="Right" Margin="10 0" Command="{Binding ExecuteCommand}"/>
                    <Button x:Name="btnCancel" Content="取消" HorizontalAlignment="Right" Margin="10 0" Click="btnCancel_Click"/>
                    <Button x:Name="btnConfirm" Content="确认" HorizontalAlignment="Right" Margin="10 0" Command="{Binding ConfirmCommand}"
                            Background="#FFFF2000" BorderBrush="#FFFF2000"/>
                </StackPanel>
            </DockPanel>
        </Border>

    </Grid>
</vb:ModuleViewBase>